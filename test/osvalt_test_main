#!/bin/bash
# 
# Osvalt test scenario for automated testing osvalt script
#
# Style guide: https://google.github.io/styleguide/shell.xml


sys_message (){
  
  local assume \
        items

  assume="${1}"
  items="${2}"
  

  if [[ "${assume}" == "${items}" ]]; then
    echo "Ok..."
  else
    echo "Failed... Assume ${assume}, get ${items}"
  fi

}

# Prepare files

touch -t "201703072359" access_aux9_my_2017_03_07.log.gz
touch -t "201703082359" access_aux9_my_2017_03_08.log

# Testing case 1

echo "Testing case 1"

assume=57
items=$(../osvalt -s mock_data/ \
              "2017-03-06 00:00:00" \
              "2017-03-09 23:59:59" \
              vall | wc -l)

sys_message "${assume}" "${items}"

# Testing case 2

echo "Testing case 2"

assume=24
items=$(../osvalt -s mock_data/ \
              "2017-03-06 00:00:00" \
              "2017-03-09 23:59:59" \
              fip uniq | wc -l)

sys_message "${assume}" "${items}"

# Testing case 3

echo "Testing case 3"

assume=31
items=$(../osvalt -s mock_data/ \
              "2017-03-06 00:00:00" \
              "2017-03-09 23:59:59" \
              furl fip uniq | wc -l)

sys_message "${assume}" "${items}"

# Testing case 4

echo "Testing case 4"

assume=57
items=$(../osvalt -s mock_data/ \
              "2017-03-06 00:00:00" \
              "2017-03-09 23:59:59" \
              treq_a | tail -2 | head -1)

sys_message "${assume}" "${items}"

